// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SauceDemo.Tests.StepDefinitions.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Checkout: Your Information")]
    public partial class CheckoutYourInformationFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "CheckoutInformation.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "StepDefinitions/Features", "Checkout: Your Information", null, ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Tab key navigates to the next field")]
        public void TabKeyNavigatesToTheNextField()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Tab key navigates to the next field", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 3
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 4
        testRunner.Given("I open the login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 5
        testRunner.And("I log in as \"standard_user\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                            "Product",
                            "Order"});
                table9.AddRow(new string[] {
                            "Sauce Labs Backpack",
                            "1"});
                table9.AddRow(new string[] {
                            "Sauce Labs Fleece Jacket",
                            "2"});
                table9.AddRow(new string[] {
                            "Test.allTheThings() T-Shirt (Red)",
                            "3"});
                table9.AddRow(new string[] {
                            "Sauce Labs Onesie",
                            "4"});
#line 6
        testRunner.And("I add the following items to the cart:", ((string)(null)), table9, "And ");
#line hidden
#line 12
        testRunner.And("I click the cart icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 13
        testRunner.And("I click Checkout", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 14
        testRunner.And("I click the \"First Name\" field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 15
        testRunner.And("the active field is \"First Name\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 16
        testRunner.When("I press the Tab key", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 17
        testRunner.Then("the active field is \"Last Name\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Shift+tab navigates to the previous field")]
        public void ShiftTabNavigatesToThePreviousField()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Shift+tab navigates to the previous field", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 19
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 20
        testRunner.Given("I open the login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 21
        testRunner.And("I log in as \"standard_user\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                            "Product",
                            "Order"});
                table10.AddRow(new string[] {
                            "Sauce Labs Backpack",
                            "1"});
                table10.AddRow(new string[] {
                            "Sauce Labs Fleece Jacket",
                            "2"});
                table10.AddRow(new string[] {
                            "Test.allTheThings() T-Shirt (Red)",
                            "3"});
                table10.AddRow(new string[] {
                            "Sauce Labs Onesie",
                            "4"});
#line 22
        testRunner.And("I add the following items to the cart:", ((string)(null)), table10, "And ");
#line hidden
#line 28
        testRunner.And("I click the cart icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 29
        testRunner.And("I click Checkout", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 30
        testRunner.And("I click the \"Zip Code\" field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 31
        testRunner.And("the active field is \"Zip Code\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 32
        testRunner.When("I press the Shift+Tab keys", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 33
        testRunner.Then("the active field is \"Last Name\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Continue button blocks page navigation when all fields are empty")]
        public void ContinueButtonBlocksPageNavigationWhenAllFieldsAreEmpty()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Continue button blocks page navigation when all fields are empty", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 35
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 36
        testRunner.Given("I open the login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 37
        testRunner.And("I log in as \"standard_user\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                            "Product",
                            "Order"});
                table11.AddRow(new string[] {
                            "Sauce Labs Backpack",
                            "1"});
                table11.AddRow(new string[] {
                            "Sauce Labs Bolt T-Shirt",
                            "2"});
                table11.AddRow(new string[] {
                            "Test.allTheThings() T-Shirt (Red)",
                            "3"});
                table11.AddRow(new string[] {
                            "Sauce Labs Onesie",
                            "4"});
#line 38
        testRunner.And("I add the following items to the cart:", ((string)(null)), table11, "And ");
#line hidden
#line 44
        testRunner.And("I click the cart icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 45
        testRunner.And("I click Checkout", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 46
        testRunner.When("I click Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 47
        testRunner.Then("the \"checkout information\" page is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 48
        testRunner.And("the \"Error: First Name is required\" form error message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 49
        testRunner.And("all fields display error styling", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Continue button blocks page navigation when First Name field is empty")]
        public void ContinueButtonBlocksPageNavigationWhenFirstNameFieldIsEmpty()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Continue button blocks page navigation when First Name field is empty", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 52
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 53
        testRunner.Given("I open the login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 54
        testRunner.And("I log in as \"standard_user\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                            "Product",
                            "Order"});
                table12.AddRow(new string[] {
                            "Sauce Labs Backpack",
                            "1"});
                table12.AddRow(new string[] {
                            "Sauce Labs Bolt T-Shirt",
                            "2"});
                table12.AddRow(new string[] {
                            "Test.allTheThings() T-Shirt (Red)",
                            "3"});
                table12.AddRow(new string[] {
                            "Sauce Labs Onesie",
                            "4"});
#line 55
        testRunner.And("I add the following items to the cart:", ((string)(null)), table12, "And ");
#line hidden
#line 61
        testRunner.And("I click the cart icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 62
        testRunner.And("I click Checkout", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Data"});
                table13.AddRow(new string[] {
                            "First Name",
                            ""});
                table13.AddRow(new string[] {
                            "Last Name",
                            "Howlett"});
                table13.AddRow(new string[] {
                            "Zip Code",
                            "77478"});
#line 63
        testRunner.And("I enter the following data:", ((string)(null)), table13, "And ");
#line hidden
                TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Data"});
                table14.AddRow(new string[] {
                            "First Name",
                            ""});
                table14.AddRow(new string[] {
                            "Last Name",
                            "Howlett"});
                table14.AddRow(new string[] {
                            "Zip Code",
                            "77478"});
#line 68
        testRunner.And("the form displays the following data:", ((string)(null)), table14, "And ");
#line hidden
#line 73
        testRunner.When("I click Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 74
        testRunner.Then("the \"checkout information\" page is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 75
        testRunner.And("the \"Error: First Name is required\" form error message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 76
        testRunner.And("all fields display error styling", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Continue button blocks page navigation when Last Name field is empty")]
        public void ContinueButtonBlocksPageNavigationWhenLastNameFieldIsEmpty()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Continue button blocks page navigation when Last Name field is empty", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 78
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 79
        testRunner.Given("I open the login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 80
        testRunner.And("I log in as \"standard_user\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                            "Product",
                            "Order"});
                table15.AddRow(new string[] {
                            "Sauce Labs Backpack",
                            "1"});
                table15.AddRow(new string[] {
                            "Sauce Labs Bolt T-Shirt",
                            "2"});
                table15.AddRow(new string[] {
                            "Test.allTheThings() T-Shirt (Red)",
                            "3"});
                table15.AddRow(new string[] {
                            "Sauce Labs Onesie",
                            "4"});
#line 81
        testRunner.And("I add the following items to the cart:", ((string)(null)), table15, "And ");
#line hidden
#line 87
        testRunner.And("I click the cart icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 88
        testRunner.And("I click Checkout", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Data"});
                table16.AddRow(new string[] {
                            "First Name",
                            "James"});
                table16.AddRow(new string[] {
                            "Last Name",
                            ""});
                table16.AddRow(new string[] {
                            "Zip Code",
                            "77478"});
#line 89
        testRunner.And("I enter the following data:", ((string)(null)), table16, "And ");
#line hidden
                TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Data"});
                table17.AddRow(new string[] {
                            "First Name",
                            "James"});
                table17.AddRow(new string[] {
                            "Last Name",
                            ""});
                table17.AddRow(new string[] {
                            "Zip Code",
                            "77478"});
#line 94
        testRunner.And("the form displays the following data:", ((string)(null)), table17, "And ");
#line hidden
#line 99
        testRunner.When("I click Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 100
        testRunner.Then("the \"checkout information\" page is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 101
        testRunner.And("the \"Error: Last Name is required\" form error message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 102
        testRunner.And("all fields display error styling", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Continue button blocks page navigation when Postal Code field is empty")]
        public void ContinueButtonBlocksPageNavigationWhenPostalCodeFieldIsEmpty()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Continue button blocks page navigation when Postal Code field is empty", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 104
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 105
        testRunner.Given("I open the login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 106
        testRunner.And("I log in as \"standard_user\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                            "Product",
                            "Order"});
                table18.AddRow(new string[] {
                            "Sauce Labs Backpack",
                            "1"});
                table18.AddRow(new string[] {
                            "Sauce Labs Bolt T-Shirt",
                            "2"});
                table18.AddRow(new string[] {
                            "Test.allTheThings() T-Shirt (Red)",
                            "3"});
                table18.AddRow(new string[] {
                            "Sauce Labs Onesie",
                            "4"});
#line 107
        testRunner.And("I add the following items to the cart:", ((string)(null)), table18, "And ");
#line hidden
#line 113
        testRunner.And("I click the cart icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 114
        testRunner.And("I click Checkout", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Data"});
                table19.AddRow(new string[] {
                            "First Name",
                            "James"});
                table19.AddRow(new string[] {
                            "Last Name",
                            "Howlett"});
                table19.AddRow(new string[] {
                            "Zip Code",
                            ""});
#line 115
        testRunner.And("I enter the following data:", ((string)(null)), table19, "And ");
#line hidden
                TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Data"});
                table20.AddRow(new string[] {
                            "First Name",
                            "James"});
                table20.AddRow(new string[] {
                            "Last Name",
                            "Howlett"});
                table20.AddRow(new string[] {
                            "Zip Code",
                            ""});
#line 120
        testRunner.And("the form displays the following data:", ((string)(null)), table20, "And ");
#line hidden
#line 125
        testRunner.When("I click Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 126
        testRunner.Then("the \"checkout information\" page is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 127
        testRunner.And("the \"Error: Postal Code is required\" form error message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 128
        testRunner.And("all fields display error styling", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Validation error is cleared after closing the message")]
        public void ValidationErrorIsClearedAfterClosingTheMessage()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validation error is cleared after closing the message", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 130
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 131
        testRunner.Given("I open the login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 132
        testRunner.And("I log in as \"standard_user\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                            "Product",
                            "Order"});
                table21.AddRow(new string[] {
                            "Sauce Labs Backpack",
                            "1"});
                table21.AddRow(new string[] {
                            "Sauce Labs Bolt T-Shirt",
                            "2"});
                table21.AddRow(new string[] {
                            "Test.allTheThings() T-Shirt (Red)",
                            "3"});
                table21.AddRow(new string[] {
                            "Sauce Labs Onesie",
                            "4"});
#line 133
        testRunner.And("I add the following items to the cart:", ((string)(null)), table21, "And ");
#line hidden
#line 139
        testRunner.And("I click the cart icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 140
        testRunner.And("I click Checkout", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Data"});
                table22.AddRow(new string[] {
                            "First Name",
                            "James"});
                table22.AddRow(new string[] {
                            "Last Name",
                            "Howlett"});
                table22.AddRow(new string[] {
                            "Zip Code",
                            ""});
#line 141
        testRunner.And("I enter the following data:", ((string)(null)), table22, "And ");
#line hidden
#line 146
        testRunner.And("I click Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 147
        testRunner.And("the \"Error: Postal Code is required\" form error message is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 148
        testRunner.When("I dismiss the form error message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 149
        testRunner.Then("no fields display error styling", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Continue button navigates to Checkout: Overview page after validation succeeds")]
        [NUnit.Framework.CategoryAttribute("page-navigation")]
        public void ContinueButtonNavigatesToCheckoutOverviewPageAfterValidationSucceeds()
        {
            string[] tagsOfScenario = new string[] {
                    "page-navigation"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Continue button navigates to Checkout: Overview page after validation succeeds", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 152
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 153
        testRunner.Given("I open the login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 154
        testRunner.And("I log in as \"standard_user\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                            "Product",
                            "Order"});
                table23.AddRow(new string[] {
                            "Sauce Labs Backpack",
                            "1"});
                table23.AddRow(new string[] {
                            "Sauce Labs Bolt T-Shirt",
                            "2"});
                table23.AddRow(new string[] {
                            "Test.allTheThings() T-Shirt (Red)",
                            "3"});
                table23.AddRow(new string[] {
                            "Sauce Labs Onesie",
                            "4"});
#line 155
        testRunner.And("I add the following items to the cart:", ((string)(null)), table23, "And ");
#line hidden
#line 161
        testRunner.And("I click the cart icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 162
        testRunner.And("I click Checkout", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Data"});
                table24.AddRow(new string[] {
                            "First Name",
                            "James"});
                table24.AddRow(new string[] {
                            "Last Name",
                            "Howlett"});
                table24.AddRow(new string[] {
                            "Zip Code",
                            "77478"});
#line 163
        testRunner.And("I enter the following data:", ((string)(null)), table24, "And ");
#line hidden
#line 168
        testRunner.When("I click Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 169
        testRunner.Then("the \"checkout overview\" page is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Cancel button navigates to Your Cart page")]
        [NUnit.Framework.CategoryAttribute("page-navigation")]
        public void CancelButtonNavigatesToYourCartPage()
        {
            string[] tagsOfScenario = new string[] {
                    "page-navigation"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cancel button navigates to Your Cart page", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 172
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 173
        testRunner.Given("I open the login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 174
        testRunner.And("I log in as \"standard_user\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                            "Product",
                            "Order"});
                table25.AddRow(new string[] {
                            "Sauce Labs Backpack",
                            "1"});
                table25.AddRow(new string[] {
                            "Sauce Labs Bolt T-Shirt",
                            "2"});
                table25.AddRow(new string[] {
                            "Test.allTheThings() T-Shirt (Red)",
                            "3"});
                table25.AddRow(new string[] {
                            "Sauce Labs Onesie",
                            "4"});
#line 175
        testRunner.And("I add the following items to the cart:", ((string)(null)), table25, "And ");
#line hidden
#line 181
        testRunner.And("I click the cart icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 182
        testRunner.And("I click Checkout", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Data"});
                table26.AddRow(new string[] {
                            "First Name",
                            "James"});
                table26.AddRow(new string[] {
                            "Last Name",
                            "Howlett"});
                table26.AddRow(new string[] {
                            "Zip Code",
                            "77478"});
#line 183
        testRunner.And("I enter the following data:", ((string)(null)), table26, "And ");
#line hidden
#line 188
        testRunner.When("I click Cancel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 189
        testRunner.Then("the \"cart\" page is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
