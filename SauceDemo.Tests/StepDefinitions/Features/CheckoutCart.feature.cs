// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SauceDemo.Tests.StepDefinitions.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Your Cart")]
    public partial class YourCartFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "CheckoutCart.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "StepDefinitions/Features", "Your Cart", null, ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Continue Shopping button navigates back to inventory page")]
        [NUnit.Framework.CategoryAttribute("page-navigation")]
        public void ContinueShoppingButtonNavigatesBackToInventoryPage()
        {
            string[] tagsOfScenario = new string[] {
                    "page-navigation"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Continue Shopping button navigates back to inventory page", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 4
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
        testRunner.Given("I open the login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 6
        testRunner.And("I log in as \"standard_user\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                            "Product",
                            "Order"});
                table1.AddRow(new string[] {
                            "Sauce Labs Backpack",
                            "1"});
                table1.AddRow(new string[] {
                            "Sauce Labs Fleece Jacket",
                            "2"});
                table1.AddRow(new string[] {
                            "Test.allTheThings() T-Shirt (Red)",
                            "3"});
                table1.AddRow(new string[] {
                            "Sauce Labs Onesie",
                            "4"});
#line 7
        testRunner.And("I add the following items to the cart:", ((string)(null)), table1, "And ");
#line hidden
#line 13
        testRunner.And("I click the cart icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 14
        testRunner.When("I click Continue Shopping", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 15
        testRunner.Then("the \"inventory\" page is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Checkout button navigates to Checkout: Your Information page")]
        [NUnit.Framework.CategoryAttribute("page-navigation")]
        public void CheckoutButtonNavigatesToCheckoutYourInformationPage()
        {
            string[] tagsOfScenario = new string[] {
                    "page-navigation"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Checkout button navigates to Checkout: Your Information page", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 18
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 19
        testRunner.Given("I open the login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 20
        testRunner.And("I log in as \"standard_user\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                            "Product",
                            "Order"});
                table2.AddRow(new string[] {
                            "Sauce Labs Onesie",
                            "1"});
                table2.AddRow(new string[] {
                            "Sauce Labs Fleece Jacket",
                            "2"});
                table2.AddRow(new string[] {
                            "Test.allTheThings() T-Shirt (Red)",
                            "3"});
                table2.AddRow(new string[] {
                            "Sauce Labs Bike Light",
                            "4"});
#line 21
        testRunner.And("I add the following items to the cart:", ((string)(null)), table2, "And ");
#line hidden
#line 27
        testRunner.And("I click the cart icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 28
        testRunner.When("I click Checkout", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 29
        testRunner.Then("the \"checkout information\" page is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Cart displays all added items")]
        [NUnit.Framework.CategoryAttribute("cart-contents")]
        public void CartDisplaysAllAddedItems()
        {
            string[] tagsOfScenario = new string[] {
                    "cart-contents"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cart displays all added items", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 32
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 33
        testRunner.Given("I open the login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 34
        testRunner.And("I log in as \"standard_user\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                            "Product",
                            "Order"});
                table3.AddRow(new string[] {
                            "Sauce Labs Backpack",
                            "2"});
                table3.AddRow(new string[] {
                            "Sauce Labs Bike Light",
                            "1"});
                table3.AddRow(new string[] {
                            "Sauce Labs Bolt T-Shirt",
                            "4"});
                table3.AddRow(new string[] {
                            "Sauce Labs Fleece Jacket",
                            "3"});
                table3.AddRow(new string[] {
                            "Sauce Labs Onesie",
                            "6"});
                table3.AddRow(new string[] {
                            "Test.allTheThings() T-Shirt (Red)",
                            "5"});
#line 35
        testRunner.And("I add the following items to the cart:", ((string)(null)), table3, "And ");
#line hidden
#line 43
        testRunner.When("I click the cart icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                            "Product",
                            "Order"});
                table4.AddRow(new string[] {
                            "Sauce Labs Backpack",
                            "2"});
                table4.AddRow(new string[] {
                            "Sauce Labs Bike Light",
                            "1"});
                table4.AddRow(new string[] {
                            "Sauce Labs Bolt T-Shirt",
                            "4"});
                table4.AddRow(new string[] {
                            "Sauce Labs Fleece Jacket",
                            "3"});
                table4.AddRow(new string[] {
                            "Sauce Labs Onesie",
                            "6"});
                table4.AddRow(new string[] {
                            "Test.allTheThings() T-Shirt (Red)",
                            "5"});
#line 44
        testRunner.Then("the checkout product area displays the following items:", ((string)(null)), table4, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Cart displays previously added items after logout")]
        [NUnit.Framework.CategoryAttribute("cart-contents")]
        public void CartDisplaysPreviouslyAddedItemsAfterLogout()
        {
            string[] tagsOfScenario = new string[] {
                    "cart-contents"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cart displays previously added items after logout", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 54
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 55
        testRunner.Given("I open the login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 56
        testRunner.And("I log in as \"standard_user\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                            "Product",
                            "Order"});
                table5.AddRow(new string[] {
                            "Sauce Labs Backpack",
                            "2"});
                table5.AddRow(new string[] {
                            "Sauce Labs Bike Light",
                            "1"});
                table5.AddRow(new string[] {
                            "Sauce Labs Bolt T-Shirt",
                            "4"});
                table5.AddRow(new string[] {
                            "Sauce Labs Fleece Jacket",
                            "3"});
#line 57
        testRunner.And("I add the following items to the cart:", ((string)(null)), table5, "And ");
#line hidden
#line 63
        testRunner.And("I open the menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 64
        testRunner.And("I click the logout link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 65
        testRunner.And("I log in as \"standard_user\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 66
        testRunner.When("I click the cart icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                            "Product",
                            "Order"});
                table6.AddRow(new string[] {
                            "Sauce Labs Backpack",
                            "2"});
                table6.AddRow(new string[] {
                            "Sauce Labs Bike Light",
                            "1"});
                table6.AddRow(new string[] {
                            "Sauce Labs Bolt T-Shirt",
                            "4"});
                table6.AddRow(new string[] {
                            "Sauce Labs Fleece Jacket",
                            "3"});
#line 67
        testRunner.Then("the checkout product area displays the following items:", ((string)(null)), table6, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Cart displays empty when there are no items in it")]
        [NUnit.Framework.CategoryAttribute("cart-contents")]
        public void CartDisplaysEmptyWhenThereAreNoItemsInIt()
        {
            string[] tagsOfScenario = new string[] {
                    "cart-contents"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cart displays empty when there are no items in it", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 75
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 76
        testRunner.Given("I open the login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 77
        testRunner.And("I log in as \"standard_user\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 78
        testRunner.When("I click the cart icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 79
        testRunner.Then("the checkout product area displays empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Remove button removes item from cart")]
        [NUnit.Framework.CategoryAttribute("cart-contents")]
        public void RemoveButtonRemovesItemFromCart()
        {
            string[] tagsOfScenario = new string[] {
                    "cart-contents"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Remove button removes item from cart", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 82
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 83
        testRunner.Given("I open the login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 84
        testRunner.And("I log in as \"standard_user\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                            "Product",
                            "Order"});
                table7.AddRow(new string[] {
                            "Sauce Labs Backpack",
                            "2"});
                table7.AddRow(new string[] {
                            "Sauce Labs Bike Light",
                            "1"});
                table7.AddRow(new string[] {
                            "Sauce Labs Bolt T-Shirt",
                            "4"});
                table7.AddRow(new string[] {
                            "Sauce Labs Fleece Jacket",
                            "3"});
#line 85
        testRunner.And("I add the following items to the cart:", ((string)(null)), table7, "And ");
#line hidden
#line 91
        testRunner.And("I click the cart icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 92
        testRunner.When("I remove \"Sauce Labs Fleece Jacket\" from the cart", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                            "Product",
                            "Order"});
                table8.AddRow(new string[] {
                            "Sauce Labs Backpack",
                            "2"});
                table8.AddRow(new string[] {
                            "Sauce Labs Bike Light",
                            "1"});
                table8.AddRow(new string[] {
                            "Sauce Labs Bolt T-Shirt",
                            "4"});
#line 93
        testRunner.Then("the checkout product area displays the following items:", ((string)(null)), table8, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
