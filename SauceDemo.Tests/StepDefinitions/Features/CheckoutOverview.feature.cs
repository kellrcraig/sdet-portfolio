// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SauceDemo.Tests.StepDefinitions.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Checkout: Overview")]
    public partial class CheckoutOverviewFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "CheckoutOverview.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "StepDefinitions/Features", "Checkout: Overview", null, ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Cancel button navigates to Checkout: Your Information page")]
        [NUnit.Framework.CategoryAttribute("page-navigation")]
        public void CancelButtonNavigatesToCheckoutYourInformationPage()
        {
            string[] tagsOfScenario = new string[] {
                    "page-navigation"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cancel button navigates to Checkout: Your Information page", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 4
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
        testRunner.Given("I open the login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 6
        testRunner.And("I log in as \"standard_user\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                            "Product",
                            "Order"});
                table27.AddRow(new string[] {
                            "Sauce Labs Backpack",
                            "1"});
                table27.AddRow(new string[] {
                            "Sauce Labs Bolt T-Shirt",
                            "2"});
                table27.AddRow(new string[] {
                            "Test.allTheThings() T-Shirt (Red)",
                            "3"});
                table27.AddRow(new string[] {
                            "Sauce Labs Onesie",
                            "4"});
#line 7
        testRunner.And("I add the following items to the cart:", ((string)(null)), table27, "And ");
#line hidden
#line 13
        testRunner.And("I click the cart icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 14
        testRunner.And("I click Checkout", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Data"});
                table28.AddRow(new string[] {
                            "First Name",
                            "James"});
                table28.AddRow(new string[] {
                            "Last Name",
                            "Howlett"});
                table28.AddRow(new string[] {
                            "Zip Code",
                            "77478"});
#line 15
        testRunner.And("I enter the following data:", ((string)(null)), table28, "And ");
#line hidden
#line 20
        testRunner.And("I click Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 21
        testRunner.When("I click Cancel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 22
        testRunner.Then("the \"inventory\" page is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Finish button navigates to Checkout: Complete page")]
        [NUnit.Framework.CategoryAttribute("page-navigation")]
        public void FinishButtonNavigatesToCheckoutCompletePage()
        {
            string[] tagsOfScenario = new string[] {
                    "page-navigation"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Finish button navigates to Checkout: Complete page", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 25
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 26
        testRunner.Given("I open the login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 27
        testRunner.And("I log in as \"standard_user\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                            "Product",
                            "Order"});
                table29.AddRow(new string[] {
                            "Sauce Labs Backpack",
                            "1"});
                table29.AddRow(new string[] {
                            "Sauce Labs Bolt T-Shirt",
                            "2"});
                table29.AddRow(new string[] {
                            "Test.allTheThings() T-Shirt (Red)",
                            "3"});
                table29.AddRow(new string[] {
                            "Sauce Labs Onesie",
                            "4"});
#line 28
        testRunner.And("I add the following items to the cart:", ((string)(null)), table29, "And ");
#line hidden
#line 34
        testRunner.And("I click the cart icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 35
        testRunner.And("I click Checkout", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Data"});
                table30.AddRow(new string[] {
                            "First Name",
                            "James"});
                table30.AddRow(new string[] {
                            "Last Name",
                            "Howlett"});
                table30.AddRow(new string[] {
                            "Zip Code",
                            "77478"});
#line 36
        testRunner.And("I enter the following data:", ((string)(null)), table30, "And ");
#line hidden
#line 41
        testRunner.And("I click Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 42
        testRunner.When("I click Finish", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 43
        testRunner.Then("the \"checkout complete\" page is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Cart list displays all added items")]
        [NUnit.Framework.CategoryAttribute("cart-contents")]
        public void CartListDisplaysAllAddedItems()
        {
            string[] tagsOfScenario = new string[] {
                    "cart-contents"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cart list displays all added items", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 47
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 48
        testRunner.Given("I open the login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 49
        testRunner.And("I log in as \"standard_user\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                            "Product",
                            "Order"});
                table31.AddRow(new string[] {
                            "Sauce Labs Bolt T-Shirt",
                            "1"});
                table31.AddRow(new string[] {
                            "Sauce Labs Bike Light",
                            "2"});
                table31.AddRow(new string[] {
                            "Test.allTheThings() T-Shirt (Red)",
                            "3"});
#line 50
        testRunner.And("I add the following items to the cart:", ((string)(null)), table31, "And ");
#line hidden
#line 55
        testRunner.And("I click the cart icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 56
        testRunner.And("I click Checkout", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Data"});
                table32.AddRow(new string[] {
                            "First Name",
                            "James"});
                table32.AddRow(new string[] {
                            "Last Name",
                            "Howlett"});
                table32.AddRow(new string[] {
                            "Zip Code",
                            "77478"});
#line 57
        testRunner.And("I enter the following data:", ((string)(null)), table32, "And ");
#line hidden
#line 62
        testRunner.When("I click Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                            "Product",
                            "Order"});
                table33.AddRow(new string[] {
                            "Sauce Labs Bolt T-Shirt",
                            "1"});
                table33.AddRow(new string[] {
                            "Sauce Labs Bike Light",
                            "2"});
                table33.AddRow(new string[] {
                            "Test.allTheThings() T-Shirt (Red)",
                            "3"});
#line 63
        testRunner.Then("the checkout product area displays the following items:", ((string)(null)), table33, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Payment information section displays correct text")]
        public void PaymentInformationSectionDisplaysCorrectText()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Payment information section displays correct text", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 69
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 70
        testRunner.Given("I open the login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 71
        testRunner.And("I log in as \"standard_user\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                            "Product",
                            "Order"});
                table34.AddRow(new string[] {
                            "Sauce Labs Bolt T-Shirt",
                            "1"});
                table34.AddRow(new string[] {
                            "Sauce Labs Bike Light",
                            "2"});
                table34.AddRow(new string[] {
                            "Test.allTheThings() T-Shirt (Red)",
                            "3"});
#line 72
        testRunner.And("I add the following items to the cart:", ((string)(null)), table34, "And ");
#line hidden
#line 77
        testRunner.And("I click the cart icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 78
        testRunner.And("I click Checkout", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Data"});
                table35.AddRow(new string[] {
                            "First Name",
                            "James"});
                table35.AddRow(new string[] {
                            "Last Name",
                            "Howlett"});
                table35.AddRow(new string[] {
                            "Zip Code",
                            "77478"});
#line 79
        testRunner.And("I enter the following data:", ((string)(null)), table35, "And ");
#line hidden
#line 84
        testRunner.When("I click Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 85
        testRunner.Then("the payment information displays", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Shipping information section displays correct text")]
        public void ShippingInformationSectionDisplaysCorrectText()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Shipping information section displays correct text", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 87
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 88
        testRunner.Given("I open the login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 89
        testRunner.And("I log in as \"standard_user\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                            "Product",
                            "Order"});
                table36.AddRow(new string[] {
                            "Sauce Labs Bolt T-Shirt",
                            "1"});
                table36.AddRow(new string[] {
                            "Sauce Labs Bike Light",
                            "2"});
                table36.AddRow(new string[] {
                            "Test.allTheThings() T-Shirt (Red)",
                            "3"});
#line 90
        testRunner.And("I add the following items to the cart:", ((string)(null)), table36, "And ");
#line hidden
#line 95
        testRunner.And("I click the cart icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 96
        testRunner.And("I click Checkout", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Data"});
                table37.AddRow(new string[] {
                            "First Name",
                            "James"});
                table37.AddRow(new string[] {
                            "Last Name",
                            "Howlett"});
                table37.AddRow(new string[] {
                            "Zip Code",
                            "77478"});
#line 97
        testRunner.And("I enter the following data:", ((string)(null)), table37, "And ");
#line hidden
#line 102
        testRunner.When("I click Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 103
        testRunner.Then("the shipping information displays", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Price Total is calculated correctly")]
        public void PriceTotalIsCalculatedCorrectly()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Price Total is calculated correctly", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 105
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 106
        testRunner.Given("I open the login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 107
        testRunner.And("I log in as \"standard_user\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                            "Product",
                            "Order"});
                table38.AddRow(new string[] {
                            "Sauce Labs Bolt T-Shirt",
                            "1"});
                table38.AddRow(new string[] {
                            "Sauce Labs Bike Light",
                            "2"});
                table38.AddRow(new string[] {
                            "Test.allTheThings() T-Shirt (Red)",
                            "3"});
#line 108
        testRunner.And("I add the following items to the cart:", ((string)(null)), table38, "And ");
#line hidden
#line 113
        testRunner.And("I click the cart icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 114
        testRunner.And("I click Checkout", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Data"});
                table39.AddRow(new string[] {
                            "First Name",
                            "James"});
                table39.AddRow(new string[] {
                            "Last Name",
                            "Howlett"});
                table39.AddRow(new string[] {
                            "Zip Code",
                            "77478"});
#line 115
        testRunner.And("I enter the following data:", ((string)(null)), table39, "And ");
#line hidden
#line 120
        testRunner.When("I click Continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 121
        testRunner.Then("the item total displays \"Item total: $41.97\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 122
        testRunner.And("the tax displays \"Tax: $3.36\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 123
        testRunner.And("the total displays \"Total: $45.33\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
